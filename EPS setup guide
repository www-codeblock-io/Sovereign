## Install EPS (Electrum Private Server)
https://armantheparman.com/bitcoin-core-and-electrum-personal-server-electrum-wallet-on-a-raspberry-pi/

https://armantheparman.com/electrum-server/

### Download EPS source code and signiture
1. Head over to [electrum-personal-server](https://github.com/chris-belcher/electrum-personal-server/releases) and make a note of the latest release version number. At time of writing it is ```0.2.4```, update the below command to the latest version number if this is now out of date. Run:
   ```bash copy
   cd ~/Downloads && wget https://github.com/chris-belcher/electrum-personal-server/archive/refs/tags/eps-v0.2.4.tar.gz
   ```
2. Download the file signiture
   ```bash copy
   wget https://github.com/chris-belcher/electrum-personal-server/releases/download/eps-v0.2.4/eps-v0.2.4.tar.gz.asc
   ```
3. Download Chris Belchers public key, there are multiple links on this [page](https://github.com/chris-belcher/electrum-personal-server/releases) for you to manually verify Chris Belchers public key. Run:
   ```bash copy
   wget https://github.com/chris-belcher/electrum-personal-server/raw/master/docs/pubkeys/belcher.asc
   ```
4. Import the key to your system keychain
   ```bash copy
   gpg --import belcher.asc
   ```
5. Verify the source file was signed by Chris Belcher
   ```bash copy
   gpg --verify eps-v0.2.4.tar.gz.asc
   ```
   In the Terminal output, you want to see ```Good Signiture from Chris Belcher```, ignore the warning.

### Prepare for the build
6. Extract the source file, rename and save onto your Desktop, change ```rez``` in the command to your system user name. Run:
   ```bash copy
   tar -xvf eps-v0.2.4.tar.gz -C /home/rez/Desktop
   ```
7. Navigate to Desktop and rename the extracted file to ```eps```. Remember to change the file version number if you downloaded a newer version of EPS.
   ```bash copy
   cd ~/Desktop && mv electrum-personal-server-eps-v0.2.4 eps
   ```
8. Update the package list
   ```bash copy
   sudo apt update
   ```
9. Install pip3
   ```bash copy
   sudo apt install python3-pip
   ```
10. Check pip3 was installed
   ```bash copy
   pip3 --version
   ```
11. Upgrade pip3 to the latest version
   ```bash copy
   sudo pip3 install --upgrade pip
   ```
### Complete EPS installation
12. Navigate into the EPS directory. Run:
   ```bash copy
   cd ~/Desktop/eps
   ```
13. Complete installation by running the below command. Note: do not use ```sudo``` and make sure to leave in the final ```.```  
   ```bash copy
   pip3 install --user . 
   ```
   Ignore the Terminal warning about PATH, a PATH veriable will be added the next time you log out and back into the laptop again.

14. Clean up Downloads folder, remove downloaded files
   ```bash copy
   cd ~/Downloads && rm belcher.asc eps-v0.2.4.tar.gz eps-v0.2.4.tar.gz.asc
   ```

## Donâ€™t run EPS yet!
Follow the below instructions to Install Electrum and create a test wallet. After that we can edit EPS config.ini file and then run EPS for the first time.

===
### Create a Test wallet
We will set up a test (hot) wallet in Electrum so we can make sure all of our config settings are correct before actually loading up one of our wallets that contains funds.
1. Run electrum. Run:
   ```bash copy
   electrum
   ```
2. At the welcome screen. Click ```Next```.
3. Rename ```default_wallet``` to ```test_wallet``` (I think this name is less confusing). Click ```Next```.                                                                        
4. Select ```I already have a seed```. Click ```Next```.
5. Head over to [CoinPlate](https://getcoinplate.com/bip39-seed-phrase-mnemonics-generator-offline-online-tool/?v=2a6039655313 "CoinPlate's Homepage") and generate a Bip39 24 word seed phrase .
   Copy and save the seed phrase to a note on your desktop. Don't worry about security as this is just a simple test wallet for testing configuration settings.
6. Copy and paste the seed phase into the Electrum box that is displayed.
7. Click ```Options```, and select ```Bip39 seed```. Click ```OK```. Ignore the warning and click ```Next```.
8. Keep ```native segwit (p2wpkh)``` selected and click ```Next```.
9. Leave the password fields blank, we wont encrypt the wallet data as this is just a test wallet, click ```Next```.
10. Electrum - enable update check. Click ```No```. We will always verify and update our software ourselves.

### Export your ```test_wallet``` public key
11. In Electrum, click on the ```Wallet``` tab, then ```Information```. Copy and save the long zpub key displayed. We will need to enter this public key into the EPS config.ini file later.
